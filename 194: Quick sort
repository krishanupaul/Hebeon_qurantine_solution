Quick Sort in C++ with Example, Algorithm. Quicksort is a sorting technique of Data Structure, here we will learn quick sort implementation using C++.

Explanation:

Sample Inputs
5

1
5
8
4
7	

Sample Outputs
Sorted array is :- 1 4 5 7 8


  //Please accept the inputs from the console and print the output
  #include<iostream>
  using namespace std;
  
void swap(int* a, int* b) 
{ 
    int t = *a; 
    *a = *b; 
    *b = t; 
} 
 
int partition (int arr[], int low, int high) 
{ 
    int pivot = arr[high];
    int i = (low - 1);
  
    for (int j = low; j <= high- 1; j++) 
    { 
        if (arr[j] <= pivot) 
        { 
            i++;
            swap(&arr[i], &arr[j]); 
        } 
    } 
    swap(&arr[i + 1], &arr[high]); 
    return (i + 1); 
} 
  
void quickSort(int arr[], int low, int high) 
{ 
    if (low < high) 
    { 
        int pi = partition(arr, low, high); 
  
        quickSort(arr, low, pi - 1); 
        quickSort(arr, pi + 1, high); 
    } 
} 
 
void printArray(int arr[], int size) 
{ 
    int i; 
    for (i=0; i < size; i++) 
        cout<<arr[i]<<" "; 
} 
 
int main() 
{ 
    int n;
    cin>>n;
    int arr[n]; 
    for(int i;i<n;i++){
        cin>>arr[i];
    } 
    quickSort(arr, 0, n-1); 
    cout<<"Sorted array is :- ";
    printArray(arr, n); 
    return 0; 
}
